from aiogram import types, Router, F
from aiogram.enums import ParseMode
from aiogram.filters import Command, CommandStart
from aiogram.types import Message
from aiogram.utils.formatting import as_list, as_marked_section, Bold

from filters.chat_types import ChatTypeFilter
from keyboards import reply


user_private_router = Router()
user_private_router.message.filter(ChatTypeFilter(['private']))


# @user_private_router.message(CommandStart())
# async def start_cmd(message: Message):
#     await message.answer(f"–î–æ–±—Ä—ã–π –¥–µ–Ω—å {message.from_user.full_name}. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç",
#                          reply_markup=reply.start_kb2.as_markup(
#                              resize_keyboard=True,
#                              input_field_placeholder="Start"
#     ))


# @user_private_router.message(CommandStart())
# async def start_cmd(message: Message):
#     await message.answer(f"–î–æ–±—Ä—ã–π –¥–µ–Ω—å {message.from_user.full_name}. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç",
#                          reply_markup=reply.start_kb)

@user_private_router.message(CommandStart())
async def start_cmd(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç",
        reply_markup=reply.get_keyboard(
            "–ú–µ–Ω—é",
            "–û –º–∞–≥–∞–∑–∏–Ω–µ",
            "–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã",
            "–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏",
            "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
            placeholder="–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç ?",
            request_contact=4,
            size=(2, 2, 1)
        )
    )



@user_private_router.message(F.text.lower() == "–º–µ–Ω—é")
async def menu_cmd(message: Message):
    await message.answer("<i>–ú–µ–Ω—é:</i>", reply_markup=reply.remove_kb)


@user_private_router.message(F.text.lower() == "–æ –Ω–∞—Å")
@user_private_router.message(Command("about"))
async def about_cmd(message: Message):
    await message.answer("<i>–û –Ω–∞—Å: </i>")


@user_private_router.message(F.text.lower() == "—Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã")
@user_private_router.message(Command("payment"))
async def payment_cmd(message: Message):
    text = as_marked_section(
        Bold("–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:"),
        "–ö–∞—Ä—Ç–æ–π –æ–Ω–ª–∞–π–Ω",
        "–ö–∞—Ä—Ç–æ–π/–Ω–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏",
        "–í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–∞ —á–µ—Ä–µ–∑ –°–ë–ü",
        marker="‚úÖ "
    )
    await message.answer(text.as_html())


@user_private_router.message(F.text.lower() == "–≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏")
@user_private_router.message(Command("shipping"))
async def shipping_cmd(message: Message):
    text = as_list(
        as_marked_section(
            Bold("–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏"),
            "–ü–æ—á—Ç–∞",
            "–ö—É—Ä—å–µ—Ä –ø–æ –≥–æ—Ä–æ–¥—É",
            "–°–î–ï–ö",
            marker="‚úÖ "
        ),
        as_marked_section(
            Bold("–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: "),
            "–î–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ –±—É–¥–Ω–∏–µ –¥–Ω–∏ —Å 10:00 –¥–æ 23:00",
            marker="üöô",
        ),
        sep=f"\n{"-" * 100}\n"
    )
    await message.answer(text.as_html())


@user_private_router.message(Command("get_id"))
async def get_id(message: types.Message):
    await message.answer(f"{message.from_user.full_name}\nYour id: {message.from_user.id}\n")


@user_private_router.message(Command("info"))
async def get_info(message: types.Message):
    await message.answer(text="–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é", reply_markup=reply.test_kb)


@user_private_router.message(F.contact)
async def get_contact(message: types.Message):
    await message.answer("–ö–æ–Ω—Ç–∞–∫—Ç –ø–æ–ª—É—á–µ–Ω")
    await message.answer(message.contact)


@user_private_router.message(F.location)
async def get_contact(message: types.Message):
    await message.answer("–õ–æ–∫–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞")
    await message.answer(message.location)
